/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var lc_orig = ee.Image("projects/mapbiomas-workspace/public/collection6/mapbiomas_collection60_integration_v1"),
    dem1 = ee.Image("projects/iscertc/assets/S1B_IW_20190103T101414_DVP_RTC10_G_gpunem_47B9_dem"),
    dem2 = ee.Image("projects/iscertc/assets/S1B_IW_20190104T230809_DVP_RTC10_G_gpunem_11A6_dem"),
    asc = ee.Image("projects/servir-sco-assets/assets/SCO_AMZ/RTC_G_MDD/S1B_IW_20190104T230809_DVP_RTC10_G_gpunem_E2A3_VH"),
    des = ee.Image("projects/servir-sco-assets/assets/SCO_AMZ/RTC_G_MDD/S1B_IW_20190103T101414_DVP_RTC10_G_gpunem_693B_VH"),
    intersect_geo = 
    /* color: #ffc82d */
    /* shown: false */
    ee.Geometry.Polygon(
        [[[-71.1654333593876, -12.965387890985129],
          [-71.6708044531376, -13.099179795106647],
          [-71.2972692968876, -14.523407885569828],
          [-71.0665564062626, -14.486181335323797],
          [-70.8468298437626, -14.060294798421253],
          [-70.7589392187626, -14.028321012826078],
          [-70.4458288672001, -14.156189309545681],
          [-70.2096228125126, -14.001672785129417],
          [-69.9789099218876, -14.220096519057915],
          [-69.1384558203251, -13.9963427685052],
          [-68.7978796484501, -12.633274889343161],
          [-70.9566931250126, -12.118186849867124]]]);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
////////////////////////////////////////////////////////////////////////////////////////
// SAR-RTC Comparison - SERVIR/ASF/Google
// - Time Series  
// ---Create and export random samples for time series analysis
// Author: Helen Blue Parache, NASA Marshall Space Flight Center
// Date created: 10/09/2020
// Last modified:4/25/2023
////////////////////////////////////////////////////////////////////////////////////////
Map.addLayer(ee.Geometry.Point([-69.35034303865811,-13.005583578320278]));
//Map.addLayer(ee.Image('projects/mapbiomas-raisg/public/collection4/mapbiomas_raisg_panamazonia_collection4_integration_v1').select(34), {}, "Amaxon 2019")
//var lc = ee.Image('projects/mapbiomas-raisg/public/collection4/mapbiomas_raisg_panamazonia_collection4_integration_v1').select(34)
var lc = ee.Image("projects/mapbiomas-raisg/public/collection2/mapbiomas_raisg_panamazonia_collection2_integration_v2").select(33);
//Parts that the user has to change:
// 1. Land Cover
// 2. DEM
// 
//Assumptions:
// 1. number of AS and DES scenes are (basically) equal
// 2. land cover contains grassland and evergreen classes
// 3. flat and steep terrain occur in both land cover classes
//Notes
//var assetList_2 = ee.data.listAssets("users/hbb0009/RTC/GammaDEMs/");
//print(assetList_2);
// ---------------- DEM to Slope --------------------------------------------------------
// Define AOI specific  variables
// Calculate slope. Units are degrees, range is [0,90).
//example ASC & DES image for MDD 
Map.addLayer(asc, {}, "example asc image");
Map.addLayer(des, {}, "example des image");
Map.addLayer(intersect_geo, {},"AOI")
Map.centerObject(dem1);
// Convert slope degrees to percent
//Formula: %slope= tan(Angle in degrees*pi/180)*100
var slope_dem1 = dem1.multiply(Math.PI).divide(180).tan(); 
var slope_dem2 = dem2.multiply(Math.PI).divide(180).tan(); 
Map.addLayer(slope_dem1, {}, 'slope_dem1');
Map.addLayer(slope_dem2, {}, 'slope_dem2');
//mosaic slopes - take one value only
var slope_cat = ee.Image.cat([slope_dem1, slope_dem2]);
var slope_mosaic = slope_cat.reduce(ee.Reducer.median());
Map.addLayer(slope_mosaic, {}, 'slope_mosaic');
//manually identify and then export the area of valid SAR data that overlaps with the DEMs
Export.table.toAsset({
  collection: ee.FeatureCollection(intersect_geo),
  description:'intersect_geo',
  assetId: 'projects/iscertc/assets/intersect_geo_mdd_4-24-23',
  //fileFormat: 'SHP'
});
// ---------------- Land Cover -------------------------------------------------
//Generate random points stratified by evergreen and grassland classes
//Truckenbrodt et al used ~5000 samples per scene per land cover 
//so making one set for AS and on set for DES (number of scenes is almost equivalent)
print(lc)
//Reclassify MDD land cover to make sampling easier
// Reclassification for Peru // 1- Forest 2- Natural Forest 3- Forest Formation 5- Mangroves 6- Flooded Forest 9- Forest Plantation
//"Grassland", //12
//Legend source: https://mapbiomas-br-site.s3.amazonaws.com/downloads/Colecction%206/Cod_Class_legenda_Col6_MapBiomas_BR.pdf
var lc_reclass = lc.remap( //for year 2019
  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45],
  [0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
/*var lc_reclass = lc.select().remap(
  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45],
  [0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
*/
//Display LC - 2019
//For 2019 - these are based on RLCMS classes (not meant for MapBiomas)
var vizParam3 = {min: 0, max: 11, palette: ['000000', '005ce6', 'bed2ff', '73dfff', '267300', '2197ff',
                                            'e60000', 'ffff00', 'd7c29e', 'e8beff', 'baffa3', '4ce600']};
Map.addLayer(lc, {}, "Land Cover", false); //add param
// ----------------- Create Slope Samples -------------------------------------------------
//// ---average by flat & steep (ascend vs. descend, VV vs. VH)
// flat = 0 to 12 % slope and steep slope = 20% or higher
//include only evergreen LC class slopes
/*var slopereclass = ee.Image(0) //background value is 0
          .where(slope_mosaic_degree.gte(0).and(slope_mosaic_degree.lte(6.84)).and(hkh_lc.eq(3)), 1) //1 is flat
          .where(slope_mosaic_degree.gt(6.84).and(slope_mosaic_degree.lt(11.31)).and(hkh_lc.eq(3)), 2) //2 is in the middle
          .where(slope_mosaic_degree.gte(11.31).and(hkh_lc.eq(3)), 3); //3 is steep*/
var slopereclass = ee.Image(0) //background value is 0
          .where(slope_mosaic.gte(0).and(slope_mosaic.lte(12)).and(lc_reclass.eq(1)), 1) //1 is flat
          .where(slope_mosaic.gt(12).and(slope_mosaic.lt(20)), 2) //2 is in the middle
          .where(slope_mosaic.gte(20).and(lc_reclass.eq(1)), 3); //3 is steep
var singleBandVis = {
  min: 1,
  max: 3,
  palette: ['blue', 'yellow', 'red']
};          
Map.addLayer(slopereclass, singleBandVis, "slope reclass", false);
Map.addLayer(lc_reclass, singleBandVis, "lc reclass", false);
var theMax = slope_mosaic.reduceRegion(({
  reducer: ee.Reducer.max(),
  geometry: intersect_geo,
  maxPixels: 1e9
}));
print(theMax, "max slope of DEM"); //
var theMax = slope_mosaic.reduceRegion(({
  reducer: ee.Reducer.max(),
  geometry: intersect_geo,
  maxPixels: 1e9
}));
print(theMax, "max slope of overlap area"); //
//generate random samples - flat
var samples_flat = slopereclass.stratifiedSample({
  numPoints: 5000, 
  region: intersect_geo, 
  scale: 10,
  seed: 1,
  classValues: [0, 1, 2, 3],
  classPoints: [0, 5000, 0, 0], 
  geometries: true,
});
Map.addLayer(samples_flat, {}, "samples flat")
//generate random samples - steep
var samples_steep = slopereclass.stratifiedSample({
  numPoints: 5000, 
  region: intersect_geo, 
  scale: 10,
  seed: 1,
  classValues: [0, 1, 2, 3],
  classPoints: [0, 0, 0, 5000], 
  geometries: true,
});
Map.addLayer(samples_steep, {}, "samples steep");
///////////////////////Export////////////////////////////////////////////////////////
Export.table.toAsset({
  collection: samples_flat, 
  description: 'samples_flat',
  assetId: 'projects/iscertc/assets/mdd_samples_evergreen_flat'
  });
Export.table.toAsset({
  collection: samples_steep, 
  description: 'samples_steep',
  assetId: 'projects/iscertc/assets/mdd_samples_evergreen_steep'
  });
